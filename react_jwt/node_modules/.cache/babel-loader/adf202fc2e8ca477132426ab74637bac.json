{"ast":null,"code":"var _jsxFileName = \"/home/duha/Projects/react_jwt/src/components/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Input, InputNumber, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst residences = [{\n  value: 'zhejiang',\n  label: 'Zhejiang',\n  children: [{\n    value: 'hangzhou',\n    label: 'Hangzhou',\n    children: [{\n      value: 'xihu',\n      label: 'West Lake'\n    }]\n  }]\n}, {\n  value: 'jiangsu',\n  label: 'Jiangsu',\n  children: [{\n    value: 'nanjing',\n    label: 'Nanjing',\n    children: [{\n      value: 'zhonghuamen',\n      label: 'Zhong Hua Men'\n    }]\n  }]\n}];\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 8\n    }\n  }\n};\n\nconst RegistrationForm = () => {\n  _s();\n\n  const [form] = Form.useForm();\n\n  const onFinish = values => {\n    console.log('Received values of form: ', values);\n  };\n\n  const prefixSelector = /*#__PURE__*/_jsxDEV(Form.Item, {\n    name: \"prefix\",\n    noStyle: true,\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      style: {\n        width: 70\n      },\n      children: [/*#__PURE__*/_jsxDEV(Option, {\n        value: \"86\",\n        children: \"+86\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Option, {\n        value: \"87\",\n        children: \"+87\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n\n  const suffixSelector = /*#__PURE__*/_jsxDEV(Form.Item, {\n    name: \"suffix\",\n    noStyle: true,\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      style: {\n        width: 70\n      },\n      children: [/*#__PURE__*/_jsxDEV(Option, {\n        value: \"USD\",\n        children: \"$\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Option, {\n        value: \"CNY\",\n        children: \"\\xA5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n\n  const [autoCompleteResult, setAutoCompleteResult] = useState([]);\n\n  const onWebsiteChange = value => {\n    if (!value) {\n      setAutoCompleteResult([]);\n    } else {\n      setAutoCompleteResult(['.com', '.org', '.net'].map(domain => `${value}${domain}`));\n    }\n  };\n\n  const websiteOptions = autoCompleteResult.map(website => ({\n    label: website,\n    value: website\n  }));\n  return /*#__PURE__*/_jsxDEV(Form, { ...formItemLayout,\n    form: form,\n    name: \"register\",\n    onFinish: onFinish,\n    initialValues: {\n      residence: ['zhejiang', 'hangzhou', 'xihu'],\n      prefix: '86'\n    },\n    scrollToFirstError: true,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"email\",\n      label: \"E-mail\",\n      rules: [{\n        type: 'email',\n        message: 'The input is not valid E-mail!'\n      }, {\n        required: true,\n        message: 'Please input your E-mail!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"password\",\n      label: \"Password\",\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }],\n      hasFeedback: true,\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"confirm\",\n      label: \"Confirm Password\",\n      dependencies: ['password'],\n      hasFeedback: true,\n      rules: [{\n        required: true,\n        message: 'Please confirm your password!'\n      }, _ref => {\n        let {\n          getFieldValue\n        } = _ref;\n        return {\n          validator(_, value) {\n            if (!value || getFieldValue('password') === value) {\n              return Promise.resolve();\n            }\n\n            return Promise.reject(new Error('The two passwords that you entered do not match!'));\n          }\n\n        };\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"nickname\",\n      label: \"Nickname\",\n      tooltip: \"What do you want others to call you?\",\n      rules: [{\n        required: true,\n        message: 'Please input your nickname!',\n        whitespace: true\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"residence\",\n      label: \"Habitual Residence\",\n      rules: [{\n        type: 'array',\n        required: true,\n        message: 'Please select your habitual residence!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Cascader, {\n        options: residences\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"phone\",\n      label: \"Phone Number\",\n      rules: [{\n        required: true,\n        message: 'Please input your phone number!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        addonBefore: prefixSelector,\n        style: {\n          width: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"donation\",\n      label: \"Donation\",\n      rules: [{\n        required: true,\n        message: 'Please input donation amount!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(InputNumber, {\n        addonAfter: suffixSelector,\n        style: {\n          width: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"website\",\n      label: \"Website\",\n      rules: [{\n        required: true,\n        message: 'Please input website!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(AutoComplete, {\n        options: websiteOptions,\n        onChange: onWebsiteChange,\n        placeholder: \"website\",\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"intro\",\n      label: \"Intro\",\n      rules: [{\n        required: true,\n        message: 'Please input Intro'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input.TextArea, {\n        showCount: true,\n        maxLength: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"gender\",\n      label: \"Gender\",\n      rules: [{\n        required: true,\n        message: 'Please select gender!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        placeholder: \"select your gender\",\n        children: [/*#__PURE__*/_jsxDEV(Option, {\n          value: \"male\",\n          children: \"Male\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"female\",\n          children: \"Female\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"other\",\n          children: \"Other\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Captcha\",\n      extra: \"We must make sure that your are a human.\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        gutter: 8,\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"captcha\",\n            noStyle: true,\n            rules: [{\n              required: true,\n              message: 'Please input the captcha you got!'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Get captcha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"agreement\",\n      valuePropName: \"checked\",\n      rules: [{\n        validator: (_, value) => value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement'))\n      }],\n      ...tailFormItemLayout,\n      children: /*#__PURE__*/_jsxDEV(Checkbox, {\n        children: [\"I have read the \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"\",\n          children: \"agreement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailFormItemLayout,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegistrationForm, \"TY8+cMsRaO9bLWjs4W3ddTl9qnU=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = RegistrationForm;\nexport default RegistrationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"sources":["/home/duha/Projects/react_jwt/src/components/Register.js"],"names":["React","useState","Form","Input","InputNumber","Cascader","Select","Row","Col","Checkbox","Button","AutoComplete","Option","residences","value","label","children","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","RegistrationForm","form","useForm","onFinish","values","console","log","prefixSelector","width","suffixSelector","autoCompleteResult","setAutoCompleteResult","onWebsiteChange","map","domain","websiteOptions","website","residence","prefix","type","message","required","getFieldValue","validator","_","Promise","resolve","reject","Error","whitespace"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Form,\n  Input,\n  InputNumber,\n  Cascader,\n  Select,\n  Row,\n  Col,\n  Checkbox,\n  Button,\n  AutoComplete,\n} from 'antd';\nconst { Option } = Select;\nconst residences = [\n  {\n    value: 'zhejiang',\n    label: 'Zhejiang',\n    children: [\n      {\n        value: 'hangzhou',\n        label: 'Hangzhou',\n        children: [\n          {\n            value: 'xihu',\n            label: 'West Lake',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    value: 'jiangsu',\n    label: 'Jiangsu',\n    children: [\n      {\n        value: 'nanjing',\n        label: 'Nanjing',\n        children: [\n          {\n            value: 'zhonghuamen',\n            label: 'Zhong Hua Men',\n          },\n        ],\n      },\n    ],\n  },\n];\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 8,\n    },\n  },\n  wrapperCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 16,\n    },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nconst RegistrationForm = () => {\n  const [form] = Form.useForm();\n\n  const onFinish = (values) => {\n    console.log('Received values of form: ', values);\n  };\n\n  const prefixSelector = (\n    <Form.Item name=\"prefix\" noStyle>\n      <Select\n        style={{\n          width: 70,\n        }}\n      >\n        <Option value=\"86\">+86</Option>\n        <Option value=\"87\">+87</Option>\n      </Select>\n    </Form.Item>\n  );\n  const suffixSelector = (\n    <Form.Item name=\"suffix\" noStyle>\n      <Select\n        style={{\n          width: 70,\n        }}\n      >\n        <Option value=\"USD\">$</Option>\n        <Option value=\"CNY\">¥</Option>\n      </Select>\n    </Form.Item>\n  );\n  const [autoCompleteResult, setAutoCompleteResult] = useState([]);\n\n  const onWebsiteChange = (value) => {\n    if (!value) {\n      setAutoCompleteResult([]);\n    } else {\n      setAutoCompleteResult(['.com', '.org', '.net'].map((domain) => `${value}${domain}`));\n    }\n  };\n\n  const websiteOptions = autoCompleteResult.map((website) => ({\n    label: website,\n    value: website,\n  }));\n  return (\n    <Form\n      {...formItemLayout}\n      form={form}\n      name=\"register\"\n      onFinish={onFinish}\n      initialValues={{\n        residence: ['zhejiang', 'hangzhou', 'xihu'],\n        prefix: '86',\n      }}\n      scrollToFirstError\n    >\n      <Form.Item\n        name=\"email\"\n        label=\"E-mail\"\n        rules={[\n          {\n            type: 'email',\n            message: 'The input is not valid E-mail!',\n          },\n          {\n            required: true,\n            message: 'Please input your E-mail!',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        name=\"password\"\n        label=\"Password\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your password!',\n          },\n        ]}\n        hasFeedback\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item\n        name=\"confirm\"\n        label=\"Confirm Password\"\n        dependencies={['password']}\n        hasFeedback\n        rules={[\n          {\n            required: true,\n            message: 'Please confirm your password!',\n          },\n          ({ getFieldValue }) => ({\n            validator(_, value) {\n              if (!value || getFieldValue('password') === value) {\n                return Promise.resolve();\n              }\n\n              return Promise.reject(new Error('The two passwords that you entered do not match!'));\n            },\n          }),\n        ]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item\n        name=\"nickname\"\n        label=\"Nickname\"\n        tooltip=\"What do you want others to call you?\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your nickname!',\n            whitespace: true,\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        name=\"residence\"\n        label=\"Habitual Residence\"\n        rules={[\n          {\n            type: 'array',\n            required: true,\n            message: 'Please select your habitual residence!',\n          },\n        ]}\n      >\n        <Cascader options={residences} />\n      </Form.Item>\n\n      <Form.Item\n        name=\"phone\"\n        label=\"Phone Number\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your phone number!',\n          },\n        ]}\n      >\n        <Input\n          addonBefore={prefixSelector}\n          style={{\n            width: '100%',\n          }}\n        />\n      </Form.Item>\n\n      <Form.Item\n        name=\"donation\"\n        label=\"Donation\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input donation amount!',\n          },\n        ]}\n      >\n        <InputNumber\n          addonAfter={suffixSelector}\n          style={{\n            width: '100%',\n          }}\n        />\n      </Form.Item>\n\n      <Form.Item\n        name=\"website\"\n        label=\"Website\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input website!',\n          },\n        ]}\n      >\n        <AutoComplete options={websiteOptions} onChange={onWebsiteChange} placeholder=\"website\">\n          <Input />\n        </AutoComplete>\n      </Form.Item>\n\n      <Form.Item\n        name=\"intro\"\n        label=\"Intro\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input Intro',\n          },\n        ]}\n      >\n        <Input.TextArea showCount maxLength={100} />\n      </Form.Item>\n\n      <Form.Item\n        name=\"gender\"\n        label=\"Gender\"\n        rules={[\n          {\n            required: true,\n            message: 'Please select gender!',\n          },\n        ]}\n      >\n        <Select placeholder=\"select your gender\">\n          <Option value=\"male\">Male</Option>\n          <Option value=\"female\">Female</Option>\n          <Option value=\"other\">Other</Option>\n        </Select>\n      </Form.Item>\n\n      <Form.Item label=\"Captcha\" extra=\"We must make sure that your are a human.\">\n        <Row gutter={8}>\n          <Col span={12}>\n            <Form.Item\n              name=\"captcha\"\n              noStyle\n              rules={[\n                {\n                  required: true,\n                  message: 'Please input the captcha you got!',\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n          </Col>\n          <Col span={12}>\n            <Button>Get captcha</Button>\n          </Col>\n        </Row>\n      </Form.Item>\n\n      <Form.Item\n        name=\"agreement\"\n        valuePropName=\"checked\"\n        rules={[\n          {\n            validator: (_, value) =>\n              value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement')),\n          },\n        ]}\n        {...tailFormItemLayout}\n      >\n        <Checkbox>\n          I have read the <a href=\"\">agreement</a>\n        </Checkbox>\n      </Form.Item>\n      <Form.Item {...tailFormItemLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Register\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default RegistrationForm"]},"metadata":{},"sourceType":"module"}