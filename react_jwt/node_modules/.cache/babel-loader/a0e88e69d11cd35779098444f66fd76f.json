{"ast":null,"code":"var _jsxFileName = \"/home/duha/Projects/react_jwt/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { useNavigate } from \"react-router-dom\";\nimport { DataNavigation } from 'react-data-navigation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = () => {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState(\"\");\n  let navigate = useNavigate();\n\n  const submitHandler = value => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: value.email,\n        password: value.password\n      })\n    };\n    const urlFetch = fetch('http://127.0.0.1:5000/login', requestOptions);\n    urlFetch.then(res => {\n      return res.json();\n    }).then(resJson => {\n      if (resJson.message == \"Sukses\") {\n        setCurrentUser(resJson.data);\n        DataNavigation.setData('data', resJson.data); //   localStorage.setItem('myValueInLocalStorage', \"nganu\");\n\n        sessionStorage.setItem('data', JSON.stringify(resJson.data));\n        navigate(\"home\");\n      } else {\n        alert(resJson.message);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Halaman login \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      name: \"normal_login\",\n      className: \"login-form\",\n      initialValues: {\n        remember: true\n      },\n      onFinish: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"email\",\n        rules: [{\n          required: true,\n          message: 'Please input your Email!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {\n            className: \"site-form-item-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 32\n          }, this),\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"password\",\n        rules: [{\n          required: true,\n          message: 'Please input your Password!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {\n            className: \"site-form-item-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this),\n          type: \"password\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"remember\",\n          valuePropName: \"checked\",\n          noStyle: true,\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            children: \"Remember me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"login-form-forgot\",\n          href: \"\",\n          children: \"Forgot password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          className: \"login-form-button\",\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), \"Or \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"http://localhost:3000/register\",\n          children: \"register now!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginForm, \"ZvrU17nT0wHcWUXH3JtK0E6Dp20=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/home/duha/Projects/react_jwt/src/components/Login.js"],"names":["React","useState","Form","Input","Button","Checkbox","UserOutlined","LockOutlined","useNavigate","DataNavigation","LoginForm","currentUser","setCurrentUser","navigate","submitHandler","value","requestOptions","method","headers","body","JSON","stringify","email","password","urlFetch","fetch","then","res","json","resJson","message","data","setData","sessionStorage","setItem","alert","remember","required"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { useNavigate } from \"react-router-dom\";\nimport { DataNavigation } from 'react-data-navigation';\n\nconst LoginForm = () => {\n    const [currentUser, setCurrentUser] = useState(\"\")\n    let navigate = useNavigate();\n\n    const submitHandler = value => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ email: value.email, password: value.password })\n          };\n          const urlFetch = fetch('http://127.0.0.1:5000/login', requestOptions);\n          urlFetch.then( res => {\n              return res.json() \n          }).then( resJson => {\n            if(resJson.message == \"Sukses\"){\n              setCurrentUser(resJson.data)\n              DataNavigation.setData('data', resJson.data);\n            //   localStorage.setItem('myValueInLocalStorage', \"nganu\");\n              sessionStorage.setItem('data', JSON.stringify(resJson.data));\n              navigate(\"home\")\n            }else{\n              alert(resJson.message);\n            }\n          });\n    }\n  \n    return (\n        <div>\n            <h1> Halaman login </h1>\n            <Form\n                name=\"normal_login\"\n                className=\"login-form\"\n                initialValues={{\n                remember: true,\n                }}\n                onFinish={submitHandler}\n            >\n                <Form.Item\n                name=\"email\"\n                rules={[\n                    {\n                    required: true,\n                    message: 'Please input your Email!',\n                    },\n                ]}\n                >\n                <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Email\"/>\n                </Form.Item>\n                <Form.Item\n                name=\"password\"\n                rules={[\n                    {\n                    required: true,\n                    message: 'Please input your Password!',\n                    },\n                ]}\n                >\n                <Input\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                />\n                </Form.Item>\n                <Form.Item>\n                <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n                    <Checkbox>Remember me</Checkbox>\n                </Form.Item>\n        \n                <a className=\"login-form-forgot\" href=\"\">\n                    Forgot password\n                </a>\n                </Form.Item>\n        \n                <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                    Log in\n                </Button>\n                Or <a href=\"http://localhost:3000/register\">register now!</a>\n                </Form.Item>\n            </Form>\n        </div>\n    );\n};\n  \n\nexport default LoginForm"]},"metadata":{},"sourceType":"module"}