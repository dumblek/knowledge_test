{"ast":null,"code":"var _jsxFileName = \"/home/duha/Projects/react_jwt/src/components/Produk.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Input, InputNumber, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete } from 'antd';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 8\n    }\n  }\n};\n\nconst Produk = () => {\n  _s();\n\n  const [form] = Form.useForm();\n  let navigate = useNavigate();\n  const currentUser = JSON.parse(sessionStorage.data).data;\n  const token = JSON.parse(sessionStorage.data).token;\n  const [harga, setHarga] = useState(\"\");\n  const [nama, setNama] = useState(\"\");\n  const [ket, setKet] = useState(\"\");\n  console.log(token);\n\n  const Login = value => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: value.email,\n        password: value.password\n      })\n    };\n    const urlFetch = fetch('http://127.0.0.1:5000/login', requestOptions);\n    urlFetch.then(res => {\n      return res.json();\n    }).then(resJson => {\n      if (resJson.message == \"Sukses\") {\n        sessionStorage.setItem('data', JSON.stringify(resJson.data));\n        navigate(\"/home\");\n      } else {\n        alert(resJson.message);\n      }\n    });\n  };\n\n  const onFinish = values => {\n    if (values.gender != undefined) {\n      setGender(values.gender);\n    }\n\n    console.log('Received values of form: ', email, nama, gender);\n    const requestOptions = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        email: email,\n        nama: nama,\n        gender: gender == \"Laki-Laki\" ? \"L\" : \"P\"\n      })\n    };\n    const urlFetch = fetch('http://127.0.0.1:5000/user/' + currentUser.id, requestOptions);\n    urlFetch.then(res => {\n      return res.json();\n    }).then(resJson => {\n      console.log(resJson.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Produk \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, { ...formItemLayout,\n      form: form,\n      name: \"register\",\n      onFinish: onFinish,\n      initialValues: {\n        residence: ['zhejiang', 'hangzhou', 'xihu'],\n        prefix: '86'\n      },\n      scrollToFirstError: true,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"nama\",\n        label: \"Nama Produk\",\n        rules: [],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          defaultValue: nama,\n          onChange: e => setNama(e.target.value),\n          value: nama\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"harga\",\n        label: \"Harga\",\n        rules: [{\n          whitespace: true\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          defaultValue: harga,\n          onChange: e => setHarga(e.target.value),\n          value: harga\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"keterangan\",\n        label: \"Keterangan\",\n        rules: [{\n          whitespace: true\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          defaultValue: ket,\n          onChange: e => setKet(e.target.value),\n          value: ket\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailFormItemLayout,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Simpan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Produk, \"7YHR1Xb0oKXtlEB9giGmshLYRgo=\", false, function () {\n  return [Form.useForm, useNavigate];\n});\n\n_c = Produk;\nexport default Produk;\n\nvar _c;\n\n$RefreshReg$(_c, \"Produk\");","map":{"version":3,"sources":["/home/duha/Projects/react_jwt/src/components/Produk.js"],"names":["React","useState","Form","Input","InputNumber","Cascader","Select","Row","Col","Checkbox","Button","AutoComplete","useNavigate","Option","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","Produk","form","useForm","navigate","currentUser","JSON","parse","sessionStorage","data","token","harga","setHarga","nama","setNama","ket","setKet","console","log","Login","value","requestOptions","method","headers","body","stringify","email","password","urlFetch","fetch","then","res","json","resJson","message","setItem","alert","onFinish","values","gender","undefined","setGender","id","residence","prefix","e","target","whitespace"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Form,\n  Input,\n  InputNumber,\n  Cascader,\n  Select,\n  Row,\n  Col,\n  Checkbox,\n  Button,\n  AutoComplete,\n} from 'antd';\nimport { useNavigate } from \"react-router-dom\";\n\nconst { Option } = Select;\n\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 8,\n    },\n  },\n  wrapperCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 16,\n    },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nconst Produk = () => {\n  const [form] = Form.useForm();\n\n  let navigate = useNavigate();\n  const currentUser = JSON.parse(sessionStorage.data).data\n  const token = JSON.parse(sessionStorage.data).token\n  const [harga, setHarga] = useState(\"\")\n  const [nama, setNama] = useState(\"\")\n  const [ket, setKet] = useState(\"\")\n  console.log(token);\n\n  const Login = value => {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email: value.email, password: value.password })\n      };\n      const urlFetch = fetch('http://127.0.0.1:5000/login', requestOptions);\n      urlFetch.then( res => {\n          return res.json() \n      }).then( resJson => {\n        if(resJson.message == \"Sukses\"){\n          sessionStorage.setItem('data', JSON.stringify(resJson.data));\n          navigate(\"/home\")\n        }else{\n          alert(resJson.message);\n        }\n      });\n}\n\n  const onFinish = (values) => {\n    if (values.gender != undefined){\n      setGender(values.gender)\n    }\n    console.log('Received values of form: ', email, nama, gender);\n    const requestOptions = {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json', \n      'Authorization': `Bearer ${token}`         \n      },\n      body: JSON.stringify({ \n        email: email, \n        nama: nama, \n        gender: (gender == \"Laki-Laki\") ? \"L\" : \"P\"\n      })\n    };\n    const urlFetch = fetch('http://127.0.0.1:5000/user/'+currentUser.id, requestOptions);\n    urlFetch.then( res => {\n        return res.json() \n    }).then( resJson => {\n        console.log(resJson.message);\n    });\n  };\n\n  return (\n    <div>\n      <h1> Produk </h1>\n      <Form\n        {...formItemLayout}\n        form={form}\n        name=\"register\"\n        onFinish={onFinish}\n        initialValues={{\n          residence: ['zhejiang', 'hangzhou', 'xihu'],\n          prefix: '86',\n        }}\n        scrollToFirstError\n      >\n        <Form.Item\n          name=\"nama\"\n          label=\"Nama Produk\"\n          rules={[\n          ]}\n        >\n          <Input defaultValue={nama} onChange={e => setNama(e.target.value)} value={nama}/>\n        </Form.Item>\n\n        <Form.Item\n          name=\"harga\"\n          label=\"Harga\"\n          rules={[\n            {\n              whitespace: true,\n            },\n          ]}\n        >\n          <Input defaultValue={harga} onChange={e => setHarga(e.target.value)} value={harga}/>\n        </Form.Item>\n\n        <Form.Item\n          name=\"keterangan\"\n          label=\"Keterangan\"\n          rules={[\n            {\n              whitespace: true,\n            },\n          ]}\n        >\n          <Input defaultValue={ket} onChange={e => setKet(e.target.value)} value={ket}/>\n        </Form.Item>\n\n        <Form.Item {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Simpan\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default Produk"]},"metadata":{},"sourceType":"module"}