{"ast":null,"code":"var _jsxFileName = \"/home/duha/Projects/react_jwt/src/components/Profil.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Input, InputNumber, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete } from 'antd';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 8\n    }\n  }\n};\n\nconst Profil = () => {\n  _s();\n\n  const [form] = Form.useForm();\n  let navigate = useNavigate();\n  const currentUser = JSON.parse(sessionStorage.data).data;\n  const token = JSON.parse(sessionStorage.data).token;\n  const [email, setEmail] = useState(currentUser.email);\n  const [nama, setNama] = useState(currentUser.nama);\n  const [gender, setGender] = useState(currentUser.gender);\n  console.log(token);\n\n  const onFinish = values => {\n    if (values.gender != undefined) {\n      setGender(values.gender);\n    }\n\n    console.log('Received values of form: ', email, nama, gender);\n    const requestOptions = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        email: email,\n        nama: nama,\n        gender: gender == \"Laki-Laki\" ? \"L\" : \"P\"\n      })\n    };\n    const urlFetch = fetch('http://127.0.0.1:5000/user/' + currentUser.id, requestOptions);\n    urlFetch.then(res => {\n      return res.json();\n    }).then(resJson => {\n      console.log(resJson.message);\n      navigate(\"/home\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Profil \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, { ...formItemLayout,\n      form: form,\n      name: \"register\",\n      onFinish: onFinish,\n      initialValues: {\n        residence: ['zhejiang', 'hangzhou', 'xihu'],\n        prefix: '86'\n      },\n      scrollToFirstError: true,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"email\",\n        label: \"E-mail\",\n        rules: [{\n          type: 'email',\n          message: 'The input is not valid E-mail!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          defaultValue: email,\n          onChange: e => setEmail(e.target.value),\n          value: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"nama\",\n        label: \"Nama\",\n        tooltip: \"What do you want others to call you?\",\n        rules: [{\n          whitespace: true\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          defaultValue: nama,\n          onChange: e => setNama(e.target.value),\n          value: nama\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"gender\",\n        label: \"Gender\",\n        rules: [],\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          placeholder: \"select your gender\",\n          defaultValue: gender,\n          children: [/*#__PURE__*/_jsxDEV(Option, {\n            value: \"L\",\n            children: \"Laki-Laki\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"P\",\n            children: \"Perempuan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailFormItemLayout,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Simpan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Profil, \"NTksXCCqupb4pTyuZAD7v1wUBEQ=\", false, function () {\n  return [Form.useForm, useNavigate];\n});\n\n_c = Profil;\nexport default Profil;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profil\");","map":{"version":3,"sources":["/home/duha/Projects/react_jwt/src/components/Profil.js"],"names":["React","useState","Form","Input","InputNumber","Cascader","Select","Row","Col","Checkbox","Button","AutoComplete","useNavigate","Option","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","Profil","form","useForm","navigate","currentUser","JSON","parse","sessionStorage","data","token","email","setEmail","nama","setNama","gender","setGender","console","log","onFinish","values","undefined","requestOptions","method","headers","body","stringify","urlFetch","fetch","id","then","res","json","resJson","message","residence","prefix","type","e","target","value","whitespace"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Form,\n  Input,\n  InputNumber,\n  Cascader,\n  Select,\n  Row,\n  Col,\n  Checkbox,\n  Button,\n  AutoComplete,\n} from 'antd';\nimport { useNavigate } from \"react-router-dom\";\n\nconst { Option } = Select;\n\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 8,\n    },\n  },\n  wrapperCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 16,\n    },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nconst Profil = () => {\n  const [form] = Form.useForm();\n\n  let navigate = useNavigate();\n  const currentUser = JSON.parse(sessionStorage.data).data\n  const token = JSON.parse(sessionStorage.data).token\n  const [email, setEmail] = useState(currentUser.email)\n  const [nama, setNama] = useState(currentUser.nama)\n  const [gender, setGender] = useState(currentUser.gender)\n  console.log(token);\n\n  const onFinish = (values) => {\n    if (values.gender != undefined){\n      setGender(values.gender)\n    }\n    console.log('Received values of form: ', email, nama, gender);\n    const requestOptions = {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json', \n      'Authorization': `Bearer ${token}`         \n      },\n      body: JSON.stringify({ \n        email: email, \n        nama: nama, \n        gender: (gender == \"Laki-Laki\") ? \"L\" : \"P\"\n      })\n    };\n    const urlFetch = fetch('http://127.0.0.1:5000/user/'+currentUser.id, requestOptions);\n    urlFetch.then( res => {\n        return res.json() \n    }).then( resJson => {\n        console.log(resJson.message);\n        navigate(\"/home\")\n    });\n  };\n\n  return (\n    <div>\n      <h1> Profil </h1>\n      <Form\n        {...formItemLayout}\n        form={form}\n        name=\"register\"\n        onFinish={onFinish}\n        initialValues={{\n          residence: ['zhejiang', 'hangzhou', 'xihu'],\n          prefix: '86',\n        }}\n        scrollToFirstError\n      >\n        <Form.Item\n          name=\"email\"\n          label=\"E-mail\"\n          rules={[\n            {\n              type: 'email',\n              message: 'The input is not valid E-mail!',\n            },\n          ]}\n        >\n          <Input defaultValue={email} onChange={e => setEmail(e.target.value)} value={email}/>\n        </Form.Item>\n\n        <Form.Item\n          name=\"nama\"\n          label=\"Nama\"\n          tooltip=\"What do you want others to call you?\"\n          rules={[\n            {\n              whitespace: true,\n            },\n          ]}\n        >\n          <Input defaultValue={nama} onChange={e => setNama(e.target.value)} value={nama}/>\n        </Form.Item>\n\n        <Form.Item\n          name=\"gender\"\n          label=\"Gender\"\n          rules={[\n            \n          ]}\n        >\n          <Select placeholder=\"select your gender\" defaultValue={gender} >\n            <Option value=\"L\">Laki-Laki</Option>\n            <Option value=\"P\">Perempuan</Option>\n          </Select>\n        </Form.Item>\n\n        <Form.Item {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Simpan\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default Profil"]},"metadata":{},"sourceType":"module"}